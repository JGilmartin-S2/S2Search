// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace S2Search.SFTPGo.Client.AutoRest
{
    using Models;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for Quota.
    /// </summary>
    public static partial class QuotaExtensions
    {
            /// <summary>
            /// update the user used quota limits
            /// </summary>
            /// <remarks>
            /// Set the current used quota limits for the given user
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='body'>
            /// The only user mandatory fields are username, used_quota_size and
            /// used_quota_files. Please note that if the quota fields are missing they
            /// will default to 0
            /// </param>
            /// <param name='mode'>
            /// the update mode specifies if the given quota usage values should be added
            /// or replace the current ones. Possible values include: 'add', 'reset'
            /// </param>
            public static ApiResponse Update(this IQuota operations, User body, string mode = default(string))
            {
                return operations.UpdateAsync(body, mode).GetAwaiter().GetResult();
            }

            /// <summary>
            /// update the user used quota limits
            /// </summary>
            /// <remarks>
            /// Set the current used quota limits for the given user
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='body'>
            /// The only user mandatory fields are username, used_quota_size and
            /// used_quota_files. Please note that if the quota fields are missing they
            /// will default to 0
            /// </param>
            /// <param name='mode'>
            /// the update mode specifies if the given quota usage values should be added
            /// or replace the current ones. Possible values include: 'add', 'reset'
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<ApiResponse> UpdateAsync(this IQuota operations, User body, string mode = default(string), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.UpdateWithHttpMessagesAsync(body, mode, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
