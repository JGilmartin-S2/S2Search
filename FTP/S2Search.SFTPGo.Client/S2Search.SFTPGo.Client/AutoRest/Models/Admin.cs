// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace S2Search.SFTPGo.Client.AutoRest.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class Admin
    {
        /// <summary>
        /// Initializes a new instance of the Admin class.
        /// </summary>
        public Admin()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Admin class.
        /// </summary>
        /// <param name="status">status:
        /// * `0` user is disabled, login is not allowed
        /// * `1` user is enabled
        /// </param>
        /// <param name="username">username is unique</param>
        /// <param name="password">Admin password. For security reasons this
        /// field is omitted when you search/get admins</param>
        /// <param name="additionalInfo">Free form text field</param>
        public Admin(int? id = default(int?), int? status = default(int?), string username = default(string), string password = default(string), string email = default(string), IList<string> permissions = default(IList<string>), AdminFilters filters = default(AdminFilters), string additionalInfo = default(string))
        {
            Id = id;
            Status = status;
            Username = username;
            Password = password;
            Email = email;
            Permissions = permissions;
            Filters = filters;
            AdditionalInfo = additionalInfo;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public int? Id { get; set; }

        /// <summary>
        /// Gets or sets status:
        /// * `0` user is disabled, login is not allowed
        /// * `1` user is enabled
        ///
        /// </summary>
        [JsonProperty(PropertyName = "status")]
        public int? Status { get; set; }

        /// <summary>
        /// Gets or sets username is unique
        /// </summary>
        [JsonProperty(PropertyName = "username")]
        public string Username { get; set; }

        /// <summary>
        /// Gets or sets admin password. For security reasons this field is
        /// omitted when you search/get admins
        /// </summary>
        [JsonProperty(PropertyName = "password")]
        public string Password { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "email")]
        public string Email { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "permissions")]
        public IList<string> Permissions { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "filters")]
        public AdminFilters Filters { get; set; }

        /// <summary>
        /// Gets or sets free form text field
        /// </summary>
        [JsonProperty(PropertyName = "additional_info")]
        public string AdditionalInfo { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Id != null)
            {
                if (Id < 1)
                {
                    throw new ValidationException(ValidationRules.InclusiveMinimum, "Id", 1);
                }
            }
        }
    }
}
