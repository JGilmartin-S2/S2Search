// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace S2Search.SFTPGo.Client.AutoRest.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Storage filesystem details
    /// </summary>
    public partial class FilesystemConfig
    {
        /// <summary>
        /// Initializes a new instance of the FilesystemConfig class.
        /// </summary>
        public FilesystemConfig()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the FilesystemConfig class.
        /// </summary>
        /// <param name="provider">Providers:
        /// * `0` - Local filesystem
        /// * `1` - S3 Compatible Object Storage
        /// * `2` - Google Cloud Storage
        /// * `3` - Azure Blob Storage
        /// * `4` - Local filesystem encrypted
        /// * `5` - SFTP
        /// </param>
        public FilesystemConfig(int? provider = default(int?), S3Config s3config = default(S3Config), GCSConfig gcsconfig = default(GCSConfig), AzureBlobFsConfig azblobconfig = default(AzureBlobFsConfig), CryptFsConfig cryptconfig = default(CryptFsConfig), SFTPFsConfig sftpconfig = default(SFTPFsConfig))
        {
            Provider = provider;
            S3config = s3config;
            Gcsconfig = gcsconfig;
            Azblobconfig = azblobconfig;
            Cryptconfig = cryptconfig;
            Sftpconfig = sftpconfig;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets providers:
        /// * `0` - Local filesystem
        /// * `1` - S3 Compatible Object Storage
        /// * `2` - Google Cloud Storage
        /// * `3` - Azure Blob Storage
        /// * `4` - Local filesystem encrypted
        /// * `5` - SFTP
        ///
        /// </summary>
        [JsonProperty(PropertyName = "provider")]
        public int? Provider { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "s3config")]
        public S3Config S3config { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "gcsconfig")]
        public GCSConfig Gcsconfig { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "azblobconfig")]
        public AzureBlobFsConfig Azblobconfig { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "cryptconfig")]
        public CryptFsConfig Cryptconfig { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "sftpconfig")]
        public SFTPFsConfig Sftpconfig { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (S3config != null)
            {
                S3config.Validate();
            }
            if (Gcsconfig != null)
            {
                Gcsconfig.Validate();
            }
        }
    }
}
